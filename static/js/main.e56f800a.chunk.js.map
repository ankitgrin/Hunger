{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","searchInputTxt","setsearchInputTxt","mealItems","setmealItems","isItem","setisItem","mealRecipe","setmealRecipe","showMealRecipe","setshowMealRecipe","getMealList","val","trim","fetch","then","response","json","data","html","meals","forEach","meal","idMeal","strMealThumb","strMeal","mealRecipeModal","strCategory","strInstructions","strYoutube","useEffect","className","value","onInput","e","target","type","placeholder","id","onClick","preventDefault","classList","contains","parentElement","dataset","getMealRecipe","parseHtml","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NA8HeA,MA1Hf,WACE,MAA4CC,mBAAS,IAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA4BJ,oBAAS,GAArC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAAoCN,mBAAS,IAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KACA,EAA4CR,oBAAS,GAArD,mBAAOS,EAAP,KAAuBC,EAAvB,KAEMC,EAAc,SAAAC,GACE,KAAfA,EAAIC,QACHP,GAAU,GACVF,EAAa,kCAEfU,MAAM,wDAAD,OAAyDF,EAAIC,SACjEE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ,IAAIC,EAAI,GAEHD,EAAKE,OACNF,EAAKE,MAAMC,SAAQ,SAAAC,GACjBH,GAAI,oEACsCG,EAAKC,OAD3C,+FAGcD,EAAKE,aAHnB,+HAMQF,EAAKG,QANb,6JAYNnB,GAAU,KAEVa,EAAI,kCACJb,GAAU,IAEZF,EAAae,OAoBjBO,EAAkB,SAAAJ,GACpB,IAAIH,EAAI,iDACyBG,EAAKG,QAD9B,iFAGQH,EAAKE,aAHb,+EAK2BF,EAAKK,YALhC,2GAQCL,EAAKM,gBARN,2FAWON,EAAKO,WAXZ,6DAcRrB,EAAcW,GACdT,GAAkB,IAOtB,OAJAoB,qBAAU,WACRnB,EAAY,SACX,IAGD,mCACE,qBAAKoB,UAAU,YAAf,SACE,qBAAKA,UAAU,eAAf,SACE,sBAAKA,UAAU,cAAf,UACE,oBAAIA,UAAU,QAAd,6CACA,wGAA0E,uBAC1E,qDAGA,qBAAKA,UAAU,iBAAf,SACA,sBAAKA,UAAU,kBAAf,UACE,uBAAOC,MAAO/B,EAAgBgC,QAAS,SAAAC,GAAC,OAAIhC,EAAkBgC,EAAEC,OAAOH,QAAQI,KAAK,OAAOL,UAAU,iBAAiBM,YAAY,sBAAsBC,GAAG,iBAC3J,wBAAQC,QAAS,kBAAI5B,EAAYV,IAAiBmC,KAAK,SAASL,UAAU,iBAAiBO,GAAG,aAA9F,SACE,mBAAGP,UAAU,yBAKjB,qBAAKA,UAAU,cAAf,SAEE,qBAAKQ,QAAS,SAACL,GAAD,OA1DJ,SAAAA,GAGhB,GADAA,EAAEM,iBACCN,EAAEC,OAAOM,UAAUC,SAAS,cAAc,CAC3C,IAAIpB,EAAOY,EAAEC,OAAOQ,cAAcA,cAClC7B,MAAM,wDAAD,OAAyDQ,EAAKsB,QAAQN,KAC1EvB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFQ,EAAgBR,EAAKE,MAAM,QAkDRyB,CAAcX,IAAII,GAAG,OAAOP,UAAW1B,EAAO,WAAW,GAA5E,SACIyC,YAAW3C,OAInB,sBAAK4B,UAAWtB,EAAe,0BAA0B,eAAzD,UACE,wBAAQ8B,QAAS,kBAAI7B,GAAkB,IAAQ0B,KAAK,SAASL,UAAU,uBAAuBO,GAAG,mBAAjG,SACE,mBAAGP,UAAU,mBAGf,qBAAKA,UAAU,uBAAf,SACEe,YAAWvC,kBCvGVwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlC,MAAK,YAAkD,IAA/CmC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e56f800a.chunk.js","sourcesContent":["import './App.css'\nimport {useState, useEffect} from 'react'\nimport parseHtml from 'html-react-parser'\n\nfunction App() {\n  const [searchInputTxt, setsearchInputTxt] = useState(\"\");\n  const [mealItems, setmealItems] = useState(\"\");\n  const [isItem, setisItem] = useState(false);\n  const [mealRecipe, setmealRecipe] = useState(\"\");\n  const [showMealRecipe, setshowMealRecipe] = useState(false);\n  \n  const getMealList = val =>{\n      if(val.trim() === \"\"){\n          setisItem(true);\n          setmealItems(`Enter an ingredient for meal!`);\n      } else{\n        fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?i=${val.trim()}`)\n        .then(response => response.json())\n        .then(data => {\n          let html = ``;\n          {\n            if(data.meals){\n              data.meals.forEach(meal =>{\n                html += `\n                  <div className=\"meal-item\" data-id = \"${meal.idMeal}\">\n                    <div className=\"meal-img\">\n                      <img src=\"${meal.strMealThumb}\" alt=\"\" />\n                    </div>\n                    <div className=\"meal-name\">\n                      <h3>${meal.strMeal}</h3>\n                      <a href=\"#\" className=\"recipe-btn\">Get Recipe</a>\n                    </div>\n                  </div>\n                `;\n              });\n              setisItem(false);\n            } else{\n              html = `Sorry, we didn't find any meal!`;\n              setisItem(true);\n            }\n            setmealItems(html);\n          }\n        })\n      }\n  }\n\n  const getMealRecipe = e =>{\n      {\n        e.preventDefault();\n        if(e.target.classList.contains('recipe-btn')){\n          let meal = e.target.parentElement.parentElement;\n          fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${meal.dataset.id}`)\n          .then(response => response.json())\n          .then(data =>{\n              mealRecipeModal(data.meals[0]);\n          })\n        }\n      }\n  }\n\n  const mealRecipeModal = meal =>{\n      let html = `\n        <h2 className=\"recipe-title\">${meal.strMeal}</h2>\n        <div className=\"recipe-meal-img\">\n          <img src=\"${meal.strMealThumb}\" alt=\"\" />\n        </div>\n        <p className=\"recipe-category\">${meal.strCategory}</p>\n        <div className=\"recipe-instruct\">\n          <h3>Instructions:</h3>\n          <p>${meal.strInstructions}</p>\n        </div>\n        <div className=\"recipe-link\">\n          <a href=\"${meal.strYoutube}\" target=\"_blank\">Watch Video</a>\n        </div>\n      `;\n      setmealRecipe(html);\n      setshowMealRecipe(true);\n  }\n\n  useEffect(() => {\n    getMealList(\"egg\");\n  }, []);\n\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"meal-wrapper\">\n          <div className=\"meal-search\">\n            <h2 className=\"title\">Find Meals For Your Ingredients</h2>\n            <blockquote>Real food doesn't have ingredients, real food is ingredients. <br />\n            <cite>- Jamie Oliver</cite>\n            </blockquote>\n\n            <div className=\"meal_upper_box\">\n            <div className=\"meal-search-box\">\n              <input value={searchInputTxt} onInput={e => setsearchInputTxt(e.target.value)} type=\"text\" className=\"search-control\" placeholder=\"Enter an ingredient\" id=\"search-input\" />\n              <button onClick={()=>getMealList(searchInputTxt)} type=\"submit\" className=\"search-btn btn\" id=\"search-btn\">\n                <i className=\"fas fa-search\"></i>\n              </button>\n            </div>\n            </div>\n\n            <div className=\"meal-result\">\n              {/* <h2 className=\"title\">Your Search Results:</h2> */}\n              <div onClick={(e)=>getMealRecipe(e)} id=\"meal\" className={isItem?\"notFound\":\"\"}>\n                { parseHtml (mealItems) }\n              </div>\n            </div>\n\n          <div className={showMealRecipe?\"showRecipe meal-details\":\"meal-details\"}>\n            <button onClick={()=>setshowMealRecipe(false)} type=\"button\" className=\"btn recipe-close-btn\" id=\"recipe-close-btn\">\n              <i className=\"fas fa-times\"></i>\n            </button>\n\n            <div className=\"meal-details-content\">\n            { parseHtml (mealRecipe) }\n            </div>\n          </div>\n\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}